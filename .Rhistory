dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value = 2) %>%
dplyr::mutate(value = log(value)) %>%
ts(start = 2003, frequency = 12)
serie_cambio = ipeadatar::ipeadata('BM12_ERCF12') %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
series = cbind(serie_ibcbr,  serie_ipca,  serie_cambio, serie_commodities,  serie_juros_real )
forecast::autoplot(series, facets = T)
length(serie_ibcbr)
length(serie_commodities)
length(serie_cambio)
length(serie_ipca)
length(serie_juros_real)
#| echo: false
#| warning: false
#series_ipea = ipeadatar::available_series()
serie_ipca <- ipeadatar::ipeadata('PRECOS12_IPCAG12') %>%
dplyr::mutate(value = rollsum(value,12,align = 'right' , fill = NA)) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
serie_juros <- ipeadatar::ipeadata('BM366_TJOVER366') %>%
dplyr::group_by(lubridate::month(date), lubridate::year(date)) %>%
dplyr::slice(1) %>%
dplyr::ungroup() %>%
dplyr::filter(date >= as.Date("2003-01-01") & date <= as.Date("2025-02-02")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
serie_juros_real <- ((1 + serie_juros) / (1 + serie_ipca)) - 1
serie_ibcbr <- rbcb::get_series(24363) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value = 2) %>%
dplyr::mutate(value = log(value)) %>%
hp2(0.5) %>%
ts(start = 2003, frequency = 12)
serie_commodities <- rbcb::get_series(27574) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value = 2) %>%
dplyr::mutate(value = log(value)) %>%
ts(start = 2003, frequency = 12)
serie_cambio = ipeadatar::ipeadata('BM12_ERCF12') %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
series = cbind(serie_ibcbr,  serie_ipca,  serie_cambio, serie_commodities,  serie_juros_real )
forecast::autoplot(series, facets = T)
length(serie_ibcbr)
length(serie_commodities)
length(serie_cambio)
length(serie_ipca)
length(serie_juros_real)
#| echo: false
#| warning: false
vars::VARselect(series, type = 'both')
#| echo: false
#| warning: false
vars::VARselect(series, type = 'both')
names = lubridate::month(seq(1,12), label = T)
# Criar sequência de datas mensais
datas <- seq(as.Date("2003-01-01"), by = "month", length.out = 265)
# Criar dummies mensais
meses <- format(datas, "%m")
mes_fator <- factor(meses, levels = sprintf("%02d", 1:12))
dummies_mensais <- model.matrix(~ mes_fator - 1)  # matriz 266 x 12
dummies_mensais = as_tibble(dummies_mensais)
names(dummies_mensais) = names
# Colocar a variável endógena em um dataframe
var_model = vars::VAR(series, p = 12, type = "both", exogen = dummies_mensais[,-12])
vars::serial.test(var_model, lags.pt = 20, type = "PT.adjusted")
vars::serial.test(var_model, lags.pt = 20, type = "BG")
vars::normality.test(var_model)
vars::arch.test(var_model)
a <- diag(1, 5)
a[lower.tri(a)] <- NA
svar_model <- vars::SVAR(var_model, Amat = a, estmethod = 'direct')
irf = vars::irf(svar_model,impulse = "serie_juros_real", n.ahead = 36, runs = 100)
respostas <- names(as_tibble(irf[1]$irf$serie_juros_real))
for (i in 1:5) {
df <- tibble(
periodo = 1:37,
media = irf[1]$irf$serie_juros_real[,i],
lower = irf[2]$Lower$serie_juros_real[,i],
upper = irf[3]$Upper$serie_juros_real[,i]
)
p <- ggplot(df, aes(x = periodo)) +
geom_line(aes(y = media), color = "blue") +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
labs(title = paste("Resposta de", respostas[i], "ao choque em serie_juros_real"),
y = "Resposta", x = "Período") +
theme_minimal()
print(p)
}
ipeadatar::ipeadata('PRECOS12_IPCAG12') %>%
dplyr::mutate(value = rollapplyr((1 + value), 12, prod ,align = 'right' , fill = NA)-1)
#| echo: false
#| warning: false
#series_ipea = ipeadatar::available_series()
serie_ipca <- ipeadatar::ipeadata('PRECOS12_IPCAG12') %>%
dplyr::mutate(value = rollapplyr((1 + value), 12, prod ,align = 'right' , fill = NA)-1) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
serie_juros <- ipeadatar::ipeadata('BM366_TJOVER366') %>%
dplyr::group_by(lubridate::month(date), lubridate::year(date)) %>%
dplyr::slice(1) %>%
dplyr::ungroup() %>%
dplyr::filter(date >= as.Date("2003-01-01") & date <= as.Date("2025-02-02")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
serie_juros_real <- ((1 + serie_juros) / (1 + serie_ipca)) - 1
serie_ibcbr <- rbcb::get_series(24363) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value = 2) %>%
dplyr::mutate(value = log(value))
# hp2(0.5) %>%
# ts(start = 2003, frequency = 12)
serie_commodities <- rbcb::get_series(27574) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value = 2) %>%
dplyr::mutate(value = log(value)) %>%
ts(start = 2003, frequency = 12)
serie_cambio = ipeadatar::ipeadata('BM12_ERCF12') %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
series = cbind(serie_ibcbr,  serie_ipca,  serie_cambio, serie_commodities,  serie_juros_real )
forecast::autoplot(series, facets = T)
serie_ipca
#| echo: false
#| warning: false
#series_ipea = ipeadatar::available_series()
serie_ipca <- ipeadatar::ipeadata('PRECOS12_IPCAG12') %>%
dplyr::mutate(value = rollapplyr((1 + value), 12, prod ,align = 'right' , fill = NA)-1) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
serie_juros <- ipeadatar::ipeadata('BM366_TJOVER366') %>%
dplyr::group_by(lubridate::month(date), lubridate::year(date)) %>%
dplyr::slice(1) %>%
dplyr::ungroup() %>%
dplyr::filter(date >= as.Date("2003-01-01") & date <= as.Date("2025-02-02")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
serie_juros_real <- ((1 + serie_juros) / (1 + serie_ipca)) - 1
serie_ibcbr <- rbcb::get_series(24363) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value = 2) %>%
dplyr::mutate(value = log(value)) %>%
# hp2(0.5) %>%
ts(start = 2003, frequency = 12)
serie_commodities <- rbcb::get_series(27574) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value = 2) %>%
dplyr::mutate(value = log(value)) %>%
ts(start = 2003, frequency = 12)
serie_cambio = ipeadatar::ipeadata('BM12_ERCF12') %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
series = cbind(serie_ibcbr,  serie_ipca,  serie_cambio, serie_commodities,  serie_juros_real )
forecast::autoplot(series, facets = T)
length(serie_ibcbr)
length(serie_commodities)
length(serie_cambio)
length(serie_ipca)
length(serie_juros_real)
#| echo: false
#| warning: false
#series_ipea = ipeadatar::available_series()
serie_ipca <- ipeadatar::ipeadata('PRECOS12_IPCAG12') %>%
dplyr::mutate(value = rollapplyr((1 + value/100), 12, prod ,align = 'right' , fill = NA)-1) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
serie_juros <- ipeadatar::ipeadata('BM366_TJOVER366') %>%
dplyr::group_by(lubridate::month(date), lubridate::year(date)) %>%
dplyr::slice(1) %>%
dplyr::ungroup() %>%
dplyr::filter(date >= as.Date("2003-01-01") & date <= as.Date("2025-02-02")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
serie_juros_real <- ((1 + serie_juros/100) / (1 + serie_ipca)) - 1
serie_ibcbr <- rbcb::get_series(24363) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value = 2) %>%
dplyr::mutate(value = log(value)) %>%
# hp2(0.5) %>%
ts(start = 2003, frequency = 12)
serie_commodities <- rbcb::get_series(27574) %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value = 2) %>%
dplyr::mutate(value = log(value)) %>%
ts(start = 2003, frequency = 12)
serie_cambio = ipeadatar::ipeadata('BM12_ERCF12') %>%
dplyr::filter(date >= as.Date("2003-01-01") & date < as.Date("2025-02-01")) %>%
dplyr::select(value) %>%
ts(start = 2003, frequency = 12)
series = cbind(serie_ibcbr,  serie_ipca,  serie_cambio, serie_commodities,  serie_juros_real )
forecast::autoplot(series, facets = T)
length(serie_ibcbr)
length(serie_commodities)
length(serie_cambio)
length(serie_ipca)
length(serie_juros_real)
#| echo: false
#| warning: false
vars::VARselect(series, type = 'both')
names = lubridate::month(seq(1,12), label = T)
# Criar sequência de datas mensais
datas <- seq(as.Date("2003-01-01"), by = "month", length.out = 265)
# Criar dummies mensais
meses <- format(datas, "%m")
mes_fator <- factor(meses, levels = sprintf("%02d", 1:12))
dummies_mensais <- model.matrix(~ mes_fator - 1)  # matriz 266 x 12
dummies_mensais = as_tibble(dummies_mensais)
names(dummies_mensais) = names
# Colocar a variável endógena em um dataframe
var_model = vars::VAR(series, p = 12, type = "both", exogen = dummies_mensais[,-12])
vars::serial.test(var_model, lags.pt = 20, type = "PT.adjusted")
vars::serial.test(var_model, lags.pt = 20, type = "BG")
vars::normality.test(var_model)
vars::arch.test(var_model)
a <- diag(1, 5)
a[lower.tri(a)] <- NA
svar_model <- vars::SVAR(var_model, Amat = a, estmethod = 'direct')
irf = vars::irf(svar_model,impulse = "serie_juros_real", n.ahead = 36, runs = 100)
respostas <- names(as_tibble(irf[1]$irf$serie_juros_real))
for (i in 1:5) {
df <- tibble(
periodo = 1:37,
media = irf[1]$irf$serie_juros_real[,i],
lower = irf[2]$Lower$serie_juros_real[,i],
upper = irf[3]$Upper$serie_juros_real[,i]
)
p <- ggplot(df, aes(x = periodo)) +
geom_line(aes(y = media), color = "blue") +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
labs(title = paste("Resposta de", respostas[i], "ao choque em serie_juros_real"),
y = "Resposta", x = "Período") +
theme_minimal()
print(p)
}
#| echo: false
#| warning: false
vars::VARselect(series, type = 'both')
vars::normality.test(var_model)
vars::arch.test(var_model)
irf = vars::irf(svar_model,impulse = "serie_juros_real", n.ahead = 36, runs = 100, boot =
FALSE)
irf
irf = vars::irf(svar_model,impulse = "serie_juros_real", n.ahead = 36, runs = 100, ci = 0.68)
respostas <- names(as_tibble(irf[1]$irf$serie_juros_real))
for (i in 1:5) {
df <- tibble(
periodo = 1:37,
media = irf[1]$irf$serie_juros_real[,i],
lower = irf[2]$Lower$serie_juros_real[,i],
upper = irf[3]$Upper$serie_juros_real[,i]
)
p <- ggplot(df, aes(x = periodo)) +
geom_line(aes(y = media), color = "blue") +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
labs(title = paste("Resposta de", respostas[i], "ao choque em serie_juros_real"),
y = "Resposta", x = "Período") +
theme_minimal()
print(p)
}
irf = vars::irf(svar_model,impulse = "serie_juros_real", n.ahead = 36, runs = 1000, ci = 0.68)
respostas <- names(as_tibble(irf[1]$irf$serie_juros_real))
for (i in 1:5) {
df <- tibble(
periodo = 1:37,
media = irf[1]$irf$serie_juros_real[,i],
lower = irf[2]$Lower$serie_juros_real[,i],
upper = irf[3]$Upper$serie_juros_real[,i]
)
p <- ggplot(df, aes(x = periodo)) +
geom_line(aes(y = media), color = "blue") +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
labs(title = paste("Resposta de", respostas[i], "ao choque em serie_juros_real"),
y = "Resposta", x = "Período") +
theme_minimal()
print(p)
}
var_model = vars::VAR(series, p = 16, type = "both", exogen = dummies_mensais[,-12])
#| echo: false
#| warning: false
vars::serial.test(var_model, lags.pt = 20, type = "PT.adjusted")
vars::serial.test(var_model, lags.pt = 20, type = "BG")
vars::normality.test(var_model)
vars::arch.test(var_model)
#| echo: false
#| warning: false
a <- diag(1, 5)
a[lower.tri(a)] <- NA
svar_model <- vars::SVAR(var_model, Amat = a, estmethod = 'direct')
irf = vars::irf(svar_model,impulse = "serie_juros_real", n.ahead = 36, runs = 1000, ci = 0.68)
respostas <- names(as_tibble(irf[1]$irf$serie_juros_real))
for (i in 1:5) {
df <- tibble(
periodo = 1:37,
media = irf[1]$irf$serie_juros_real[,i],
lower = irf[2]$Lower$serie_juros_real[,i],
upper = irf[3]$Upper$serie_juros_real[,i]
)
p <- ggplot(df, aes(x = periodo)) +
geom_line(aes(y = media), color = "blue") +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
labs(title = paste("Resposta de", respostas[i], "ao choque em serie_juros_real"),
y = "Resposta", x = "Período") +
theme_minimal()
print(p)
}
var_model = vars::VAR(series, p = 10, type = "both", exogen = dummies_mensais[,-12])
#| echo: false
#| warning: false
vars::serial.test(var_model, lags.pt = 20, type = "PT.adjusted")
vars::serial.test(var_model, lags.pt = 20, type = "BG")
vars::normality.test(var_model)
vars::arch.test(var_model)
#| echo: false
#| warning: false
a <- diag(1, 5)
a[lower.tri(a)] <- NA
svar_model <- vars::SVAR(var_model, Amat = a, estmethod = 'direct')
#| echo: false
#| warning: false
irf = vars::irf(svar_model,impulse = "serie_juros_real", n.ahead = 36, runs = 1000, ci = 0.68)
respostas <- names(as_tibble(irf[1]$irf$serie_juros_real))
for (i in 1:5) {
df <- tibble(
periodo = 1:37,
media = irf[1]$irf$serie_juros_real[,i],
lower = irf[2]$Lower$serie_juros_real[,i],
upper = irf[3]$Upper$serie_juros_real[,i]
)
p <- ggplot(df, aes(x = periodo)) +
geom_line(aes(y = media), color = "blue") +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
labs(title = paste("Resposta de", respostas[i], "ao choque em serie_juros_real"),
y = "Resposta", x = "Período") +
theme_minimal()
print(p)
}
#| echo: false
#| warning: false
vars::VARselect(series, type = 'both')
fevd = vars::fevd(svar_model, n.ahead = 36)
fevd
plot(fevd)
plot(fevd[1])
plot(fevd[[1]])
plot(fevd)
plot(fevd$serie_ibcbr)
plot(fevd$serie_ibcbr)
fevd_result = vars::fevd(svar_model, n.ahead = 36)
# Converter FEVD em data.frame tidy
fevd_df <- map_dfr(names(fevd_result), function(var_name) {
fevd_mat <- fevd_result[[var_name]]
df <- as.data.frame(fevd_mat)
df$Horizon <- 1:nrow(df)
df_long <- pivot_longer(df, -Horizon, names_to = "Source", values_to = "Contribution")
df_long$Variable <- var_name
return(df_long)
})
#| echo: false
#| warning: false
library(purrr)
fevd_result = vars::fevd(svar_model, n.ahead = 36)
# Converter FEVD em data.frame tidy
fevd_df <- map_dfr(names(fevd_result), function(var_name) {
fevd_mat <- fevd_result[[var_name]]
df <- as.data.frame(fevd_mat)
df$Horizon <- 1:nrow(df)
df_long <- pivot_longer(df, -Horizon, names_to = "Source", values_to = "Contribution")
df_long$Variable <- var_name
return(df_long)
})
ggplot(fevd_df, aes(x = Horizon, y = Contribution, fill = Source)) +
geom_area(alpha = 0.8, color = "white") +
facet_wrap(~ Variable, scales = "free_y") +
scale_fill_brewer(palette = "Set2") +
theme_minimal(base_size = 14) +
labs(title = "FEVD - Decomposição da Variância do Erro de Previsão",
x = "Horizonte (meses)",
y = "Contribuição (%)",
fill = "Fonte do Choque") +
theme(legend.position = "bottom",
strip.text = element_text(face = "bold"))
ggplot(fevd_df, aes(x = Horizon, y = Contribution, fill = Source)) +
geom_bar(alpha = 0.8, color = "white") +
facet_wrap(~ Variable, scales = "free_y") +
scale_fill_brewer(palette = "Set2") +
theme_minimal(base_size = 14) +
labs(title = "FEVD - Decomposição da Variância do Erro de Previsão",
x = "Horizonte (meses)",
y = "Contribuição (%)",
fill = "Fonte do Choque") +
theme(legend.position = "bottom",
strip.text = element_text(face = "bold"))
ggplot(fevd_df, aes(x = Horizon, y = Contribution, fill = Source)) +
geom_area(alpha = 0.8, color = "white") +
facet_wrap(~ Variable, scales = "free_y") +
scale_fill_brewer(palette = "Set2") +
theme_minimal(base_size = 14) +
labs(title = "FEVD - Decomposição da Variância do Erro de Previsão",
x = "Horizonte (meses)",
y = "Contribuição (%)",
fill = "Fonte do Choque") +
theme(legend.position = "bottom",
strip.text = element_text(face = "bold"))
#| echo: false
#| warning: false
library(purrr)
fevd_result = vars::fevd(svar_model, n.ahead = 36)
# Converter FEVD em data.frame tidy
fevd_df <- map_dfr(names(fevd_result), function(var_name) {
fevd_mat <- fevd_result[[var_name]]
df <- as.data.frame(fevd_mat)
df$Horizon <- 1:nrow(df)
df_long <- pivot_longer(df, -Horizon, names_to = "Source", values_to = "Contribution")
df_long$Variable <- var_name
return(df_long)
})
ggplot(fevd_df, aes(x = Horizon, y = Contribution, fill = Source)) +
geom_area(alpha = 0.8, color = "white") +
facet_wrap(~ Variable, scales = "free_y") +
scale_fill_brewer(palette = "Set2") +
theme_minimal(base_size = 14) +
labs(title = "FEVD - Decomposição da Variância do Erro de Previsão",
x = "Horizonte (meses)",
y = "(%)",
fill = "Choque") +
theme(legend.position = "bottom",
strip.text = element_text(face = "bold"))
plot(fevd)
fevd_result
var_model
library(VARsignR)
install.packages('HI')
install.packages('minqa')
install.packages('mvnfast')
install.packages("HI_0.5.tar.gz", repos = NULL, type = "source")
install.packages("HI_0.5.tar.gz", repos = NULL, type = "source")
Sys.which("make")
wriwriteLines('PATH="${RTOOLS44_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")teLines('PATH="${RTOOLS44_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
wriwriteLines('PATH="${RTOOLS44_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")teLines('PATH="${RTOOLS44_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
writeLines('PATH="${RTOOLS44_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
Sys.which("make")
Sys.which("make")
writeLines('PATH="${RTOOLS44_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
writeLines('PATH="${RTOOLS44_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
install.packages("HI_0.5.tar.gz", repos = NULL, type = "source")
install.packages("VARsignR_0.1.2.tar.gz", repos = NULL, type = "source")
library(VARsignR)
# Restricoes
names(series)
series
constr <- c(+5,-2,-1)
modelo_varsign <- VARsignR::uhlig.reject(Y = series, nlags = 12,
draws=200, subdraws=200, nkeep=1000, KMIN=1,
KMAX=6, constrained=constr, constant=T, steps=30)
VARsignR::irfplot(irfdraws = irfs1, type="median",  save=FALSE, bands=c(0.16, 0.84),
grid=TRUE, bw=FALSE)
irfs1 <- modelo_varsign$IRFS
VARsignR::irfplot(irfdraws = irfs1, type="median",  save=FALSE, bands=c(0.16, 0.84),
grid=TRUE, bw=FALSE)
fevd1 <- modelo_varsign$FEVDS
fevdplot(fevd1, table=TRUE, label=vl, periods=c(1,10,20,30,40,50,60))
fevd1 <- modelo_varsign$FEVDS
VARsignR::fevdplot(fevd1, save=FALSE, bands=c(0.16, 0.84), grid=TRUE,
bw=FALSE, table=FALSE, periods=NULL)
fevdplot(fevd1, table=TRUE, label=vl, periods=c(1,10,20,30,40,50,60))
VARsignR::fevdplot(fevd1, save=FALSE, bands=c(0.16, 0.84), grid=TRUE,
bw=FALSE, table=FALSE, periods=NULL)
library(VARsignR)
# Restricoes
names(series)
constr <- c(+5,-2,-1)
modelo_varsign <- VARsignR::uhlig.reject(Y = series, nlags = 12,
draws=200, subdraws=200, nkeep=1000, KMIN=1,
KMAX=6, constrained=constr, constant=T, steps=30)
#summary(modelo_varsign)
vl <- names(data_var)
irfs1 <- modelo_varsign$IRFS
VARsignR::irfplot(irfdraws = irfs1, type="median",  save=FALSE, bands=c(0.16, 0.84),
grid=TRUE, bw=FALSE)
fevd1 <- modelo_varsign$FEVDS
VARsignR::fevdplot(fevd1, save=FALSE, bands=c(0.16, 0.84), grid=TRUE,
bw=FALSE, table=FALSE, periods=NULL)
fevdplot(fevd1, table=TRUE, label=vl, periods=c(1,10,20,30,40,50,60))
fevd1
VARsignR::fevdplot(fevd1, save=FALSE, bands=c(0.16, 0.84), grid=TRUE,
bw=FALSE, table=T, periods=NULL)
irfs1 <- modelo_varsign$IRFS
VARsignR::irfplot(irfdraws = irfs1, type="median",  save=FALSE, bands=c(0.16, 0.84),
grid=TRUE, bw=FALSE)
#| echo: false
#| warning: false
irfs1 <- modelo_varsign$IRFS
VARsignR::irfplot(irfdraws = irfs1, type="median",  save=FALSE, bands=c(0.32, 0.68),
grid=TRUE, bw=FALSE)
#| echo: false
#| warning: false
fevd1 <- modelo_varsign$FEVDS
VARsignR::fevdplot(fevd1, save=T, bands=c(0.16, 0.84), grid=TRUE,
bw=FALSE, table=F, periods=NULL)
